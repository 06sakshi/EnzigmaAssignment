import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.testng.Assert;
import org.testng.annotations.AfterClass;
import org.testng.annotations.BeforeClass;
import org.testng.annotations.DataProvider;
import org.testng.annotations.Test;

public class ForgotPasswordValidation {
    WebDriver driver;

    @BeforeClass
    public void setUp() {
        // Set up WebDriver and launch the browser
        System.setProperty("webdriver.chrome.driver", "path/to/chromedriver");
        driver = new ChromeDriver();
        driver.manage().window().maximize();
        driver.get("https://app-staging.nokodr.com/"); // Replace with actual URL
    }

    @AfterClass
    public void tearDown() {
        // Close the browser
        driver.quit();
    }

    @Test(dataProvider = "emailTestData")
    public void testForgotPassword(String email, String expectedMessage, boolean isValid) {
        // Locate the email input field and submit button
        WebElement emailField = driver.findElement(By.id("email"));
        WebElement submitButton = driver.findElement(By.id("submitButton"));

        // Clear previous input and enter email
        emailField.clear();
        emailField.sendKeys(email);

        // Submit the request
        submitButton.click();

        // Wait for response (can use WebDriverWait for better handling)
        try {
            Thread.sleep(2000);
        } catch (InterruptedException e) {
            e.printStackTrace();
        }

        // Check the success or error message
        WebElement messageElement = driver.findElement(By.id("responseMessage")); // Replace with actual ID or locator
        String actualMessage = messageElement.getText();

        // Assert the message
        Assert.assertEquals(actualMessage, expectedMessage);

        // Additional validation for valid inputs
        if (isValid) {
            Assert.assertTrue(actualMessage.contains("Reset link sent"), "Success message not displayed properly");
        }
    }

    @DataProvider(name = "emailTestData")
    public Object[][] emailTestData() {
        return new Object[][]{
            {"sakshianilmane143@gmail.com", "Reset link sent to your email", true}, // Valid input
            {"12sakshianilmane@gmail.com", "Email not found", false},          // Non-registered email
            {"12sakshianilmane@gmail.com", "Invalid email format", false},                 // Invalid email format
            {"", "Email field cannot be blank", false},                       // Blank email field
        };
    }
}